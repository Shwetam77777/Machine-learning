import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error,mean_absolute_error,r2_score
import matplotlib.pyplot as plt
import numpy as np

dataset=pd.read_excel(r"F:\flash_vs_arrow_for_SLR.xlsx")
df=pd.DataFrame(dataset)
print(df)

#NULL DATA CHECKING

print(df.isnull().sum())

#SEPARATE X and Y
X=df.iloc[:,:1]
#print(X)

y = df.iloc[:,1:2]
#print(y)

model = LinearRegression()
model.fit(X,y)
print("SLOPE OF THE DATA:  ",model.coef_)
print("Y-INTERCEPT OF THE DATA:  ",model.intercept_)
y_pred = model.predict(X)

plt.xlabel("flash_episode ")
plt.ylabel("flash_us_viewser")
plt.title("flash viewers")
plt.scatter(df["flash_episode"],df["flash_us_viewers"],c='green',label='no. of episode')
plt.plot(df["flash_us_viewers"],y_pred,c='red',label=' no. of viewers')
plt.grid()
plt.legend()
plt.show()


#SEPARATE X2 and Y2
X2=df.iloc[:,2:3]
#print(X2)

y2 = df.iloc[:,3:4]
#print(y2)

model2 = LinearRegression()
model2.fit(X2,y2)
print("SLOPE OF THE DATA:  ",model.coef_)
print("Y-INTERCEPT OF THE DATA:  ",model2.intercept_)
y_pred2 = model2.predict(X2)

plt.xlabel("arrow_episode ")
plt.ylabel("arrow_us_viewers")
plt.title("arrow viewers")
plt.scatter(df["flash_episode"],df["flash_us_viewers"],c='green',label='no. of episode')
plt.plot(df["flash_us_viewers"],y_pred,c='red',label=' no. of viewers')
plt.grid()
plt.legend()
plt.show()
# prediction of new episode
sf = int(input("episode no."))
new_predict=model.predict([[sf]])
print(new_predict)
new_predict2=model2.predict([[sf]])
print(new_predict2)
if (new_predict>new_predict2):
     print("flash has max no of viewers")
else:
     print(" arrow has max no. of viewers")