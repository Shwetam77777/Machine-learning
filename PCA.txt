#PCA FROM SCRATCH
from sklearn.datasets import load_iris
import pandas as pd
import numpy as np
from sklearn.decomposition import PCA
import matplotlib.pyplot as plt
import seaborn as sb

dataset=load_iris()
ORIGINAL_MATRIX = dataset.data
#print(ORIGINAL_MATRIX)

IRIS_COV_MATRIX=np.cov(ORIGINAL_MATRIX,rowvar=False)
#print(IRIS_COV_MATRIX)

pca=PCA(n_components=None)
pca_matrix=pca.fit_transform(ORIGINAL_MATRIX)
print(pca.explained_variance_)
print(pca.explained_variance_ratio_)
eigen_values,eigen_vectors=np.linalg.eig(IRIS_COV_MATRIX)
print(eigen_values)
print(eigen_vectors)

FEATURE_MATRIX=eigen_vectors[:,:2]
FEATURE_MATRIX_T=np.transpose(FEATURE_MATRIX)
ORIGINAL_MATRIX_T = np.transpose(ORIGINAL_MATRIX)

FINAL_MATRIX = np.matmul(FEATURE_MATRIX_T,ORIGINAL_MATRIX_T)
FINAL_MATRIX_T=np.transpose(FINAL_MATRIX)
print(FINAL_MATRIX_T.shape)
print(FINAL_MATRIX_T)

    
    data=pd.DataFrame(data=FINAL_MATRIX_T,columns=['PC1','PC2'])
    y_series=pd.Series(dataset.target)
    y_series=y_series.replace(0,'setosa')
    y_series=y_series.replace(1,'versicolor')
    y_series = y_series.replace(2,'virginica')
    data['target'] = y_series
    print(data)

    sb.lmplot('PC1','PC2',data=data,hue='target',fit_reg=False)
plt.show()